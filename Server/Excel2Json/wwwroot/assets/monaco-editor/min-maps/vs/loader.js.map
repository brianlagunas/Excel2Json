{"version":3,"sources":["out-editor/vs/loader.js"],"sourcesContent":["/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.27.0(730c98dfd4e771a851edf1bc944ea5c5018ee8cb)\n * Released under the MIT license\n * https://github.com/microsoft/vscode/blob/main/LICENSE.txt\n *-----------------------------------------------------------*/\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/*---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n * Please make sure to make edits in the .ts file at https://github.com/microsoft/vscode-loader/\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _amdLoaderGlobal = this;\r\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    AMDLoader.global = _amdLoaderGlobal;\r\n    var Environment = /** @class */ (function () {\r\n        function Environment() {\r\n            this._detected = false;\r\n            this._isWindows = false;\r\n            this._isNode = false;\r\n            this._isElectronRenderer = false;\r\n            this._isWebWorker = false;\r\n        }\r\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isWindows;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Environment.prototype, \"isNode\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isNode;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isElectronRenderer;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isWebWorker;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Environment.prototype._detect = function () {\r\n            if (this._detected) {\r\n                return;\r\n            }\r\n            this._detected = true;\r\n            this._isWindows = Environment._isWindows();\r\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\r\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\r\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\r\n        };\r\n        Environment._isWindows = function () {\r\n            if (typeof navigator !== 'undefined') {\r\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (typeof process !== 'undefined') {\r\n                return (process.platform === 'win32');\r\n            }\r\n            return false;\r\n        };\r\n        return Environment;\r\n    }());\r\n    AMDLoader.Environment = Environment;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    var LoaderEvent = /** @class */ (function () {\r\n        function LoaderEvent(type, detail, timestamp) {\r\n            this.type = type;\r\n            this.detail = detail;\r\n            this.timestamp = timestamp;\r\n        }\r\n        return LoaderEvent;\r\n    }());\r\n    AMDLoader.LoaderEvent = LoaderEvent;\r\n    var LoaderEventRecorder = /** @class */ (function () {\r\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\r\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\r\n        }\r\n        LoaderEventRecorder.prototype.record = function (type, detail) {\r\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\r\n        };\r\n        LoaderEventRecorder.prototype.getEvents = function () {\r\n            return this._events;\r\n        };\r\n        return LoaderEventRecorder;\r\n    }());\r\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\r\n    var NullLoaderEventRecorder = /** @class */ (function () {\r\n        function NullLoaderEventRecorder() {\r\n        }\r\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\r\n            // Nothing to do\r\n        };\r\n        NullLoaderEventRecorder.prototype.getEvents = function () {\r\n            return [];\r\n        };\r\n        NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\r\n        return NullLoaderEventRecorder;\r\n    }());\r\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    var Utilities = /** @class */ (function () {\r\n        function Utilities() {\r\n        }\r\n        /**\r\n         * This method does not take care of / vs \\\r\n         */\r\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\r\n            uri = decodeURI(uri).replace(/%23/g, '#');\r\n            if (isWindows) {\r\n                if (/^file:\\/\\/\\//.test(uri)) {\r\n                    // This is a URI without a hostname => return only the path segment\r\n                    return uri.substr(8);\r\n                }\r\n                if (/^file:\\/\\//.test(uri)) {\r\n                    return uri.substr(5);\r\n                }\r\n            }\r\n            else {\r\n                if (/^file:\\/\\//.test(uri)) {\r\n                    return uri.substr(7);\r\n                }\r\n            }\r\n            // Not sure...\r\n            return uri;\r\n        };\r\n        Utilities.startsWith = function (haystack, needle) {\r\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\r\n        };\r\n        Utilities.endsWith = function (haystack, needle) {\r\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\r\n        };\r\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\r\n        Utilities.containsQueryString = function (url) {\r\n            return /^[^\\#]*\\?/gi.test(url);\r\n        };\r\n        /**\r\n         * Does `url` start with http:// or https:// or file:// or / ?\r\n         */\r\n        Utilities.isAbsolutePath = function (url) {\r\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\r\n        };\r\n        Utilities.forEachProperty = function (obj, callback) {\r\n            if (obj) {\r\n                var key = void 0;\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        callback(key, obj[key]);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        Utilities.isEmpty = function (obj) {\r\n            var isEmpty = true;\r\n            Utilities.forEachProperty(obj, function () {\r\n                isEmpty = false;\r\n            });\r\n            return isEmpty;\r\n        };\r\n        Utilities.recursiveClone = function (obj) {\r\n            if (!obj || typeof obj !== 'object' || obj instanceof RegExp) {\r\n                return obj;\r\n            }\r\n            if (!Array.isArray(obj) && Object.getPrototypeOf(obj) !== Object.prototype) {\r\n                // only clone \"simple\" objects\r\n                return obj;\r\n            }\r\n            var result = Array.isArray(obj) ? [] : {};\r\n            Utilities.forEachProperty(obj, function (key, value) {\r\n                if (value && typeof value === 'object') {\r\n                    result[key] = Utilities.recursiveClone(value);\r\n                }\r\n                else {\r\n                    result[key] = value;\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        Utilities.generateAnonymousModule = function () {\r\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\r\n        };\r\n        Utilities.isAnonymousModule = function (id) {\r\n            return Utilities.startsWith(id, '===anonymous');\r\n        };\r\n        Utilities.getHighPerformanceTimestamp = function () {\r\n            if (!this.PERFORMANCE_NOW_PROBED) {\r\n                this.PERFORMANCE_NOW_PROBED = true;\r\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\r\n            }\r\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\r\n        };\r\n        Utilities.NEXT_ANONYMOUS_ID = 1;\r\n        Utilities.PERFORMANCE_NOW_PROBED = false;\r\n        Utilities.HAS_PERFORMANCE_NOW = false;\r\n        return Utilities;\r\n    }());\r\n    AMDLoader.Utilities = Utilities;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    function ensureError(err) {\r\n        if (err instanceof Error) {\r\n            return err;\r\n        }\r\n        var result = new Error(err.message || String(err) || 'Unknown Error');\r\n        if (err.stack) {\r\n            result.stack = err.stack;\r\n        }\r\n        return result;\r\n    }\r\n    AMDLoader.ensureError = ensureError;\r\n    ;\r\n    var ConfigurationOptionsUtil = /** @class */ (function () {\r\n        function ConfigurationOptionsUtil() {\r\n        }\r\n        /**\r\n         * Ensure configuration options make sense\r\n         */\r\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\r\n            function defaultOnError(err) {\r\n                if (err.phase === 'loading') {\r\n                    console.error('Loading \"' + err.moduleId + '\" failed');\r\n                    console.error(err);\r\n                    console.error('Here are the modules that depend on it:');\r\n                    console.error(err.neededBy);\r\n                    return;\r\n                }\r\n                if (err.phase === 'factory') {\r\n                    console.error('The factory method of \"' + err.moduleId + '\" has thrown an exception');\r\n                    console.error(err);\r\n                    return;\r\n                }\r\n            }\r\n            options = options || {};\r\n            if (typeof options.baseUrl !== 'string') {\r\n                options.baseUrl = '';\r\n            }\r\n            if (typeof options.isBuild !== 'boolean') {\r\n                options.isBuild = false;\r\n            }\r\n            if (typeof options.paths !== 'object') {\r\n                options.paths = {};\r\n            }\r\n            if (typeof options.config !== 'object') {\r\n                options.config = {};\r\n            }\r\n            if (typeof options.catchError === 'undefined') {\r\n                options.catchError = false;\r\n            }\r\n            if (typeof options.recordStats === 'undefined') {\r\n                options.recordStats = false;\r\n            }\r\n            if (typeof options.urlArgs !== 'string') {\r\n                options.urlArgs = '';\r\n            }\r\n            if (typeof options.onError !== 'function') {\r\n                options.onError = defaultOnError;\r\n            }\r\n            if (!Array.isArray(options.ignoreDuplicateModules)) {\r\n                options.ignoreDuplicateModules = [];\r\n            }\r\n            if (options.baseUrl.length > 0) {\r\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\r\n                    options.baseUrl += '/';\r\n                }\r\n            }\r\n            if (typeof options.cspNonce !== 'string') {\r\n                options.cspNonce = '';\r\n            }\r\n            if (typeof options.preferScriptTags === 'undefined') {\r\n                options.preferScriptTags = false;\r\n            }\r\n            if (!Array.isArray(options.nodeModules)) {\r\n                options.nodeModules = [];\r\n            }\r\n            if (options.nodeCachedData && typeof options.nodeCachedData === 'object') {\r\n                if (typeof options.nodeCachedData.seed !== 'string') {\r\n                    options.nodeCachedData.seed = 'seed';\r\n                }\r\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\r\n                    options.nodeCachedData.writeDelay = 1000 * 7;\r\n                }\r\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\r\n                    var err = ensureError(new Error('INVALID cached data configuration, \\'path\\' MUST be set'));\r\n                    err.phase = 'configuration';\r\n                    options.onError(err);\r\n                    options.nodeCachedData = undefined;\r\n                }\r\n            }\r\n            return options;\r\n        };\r\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\r\n            if (overwrite === void 0) { overwrite = null; }\r\n            if (base === void 0) { base = null; }\r\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\r\n            // Merge known properties and overwrite the unknown ones\r\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\r\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\r\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\r\n                }\r\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\r\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\r\n                }\r\n                else if (key === 'config' && typeof result.config !== 'undefined') {\r\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\r\n                }\r\n                else {\r\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\r\n                }\r\n            });\r\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\r\n        };\r\n        return ConfigurationOptionsUtil;\r\n    }());\r\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\r\n    var Configuration = /** @class */ (function () {\r\n        function Configuration(env, options) {\r\n            this._env = env;\r\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\r\n            this._createIgnoreDuplicateModulesMap();\r\n            this._createNodeModulesMap();\r\n            this._createSortedPathsRules();\r\n            if (this.options.baseUrl === '') {\r\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\r\n                    var nodeMain = this.options.nodeRequire.main.filename;\r\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\r\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\r\n                }\r\n                if (this.options.nodeMain && this._env.isNode) {\r\n                    var nodeMain = this.options.nodeMain;\r\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\r\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\r\n                }\r\n            }\r\n        }\r\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\r\n            // Build a map out of the ignoreDuplicateModules array\r\n            this.ignoreDuplicateModulesMap = {};\r\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\r\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\r\n            }\r\n        };\r\n        Configuration.prototype._createNodeModulesMap = function () {\r\n            // Build a map out of nodeModules array\r\n            this.nodeModulesMap = Object.create(null);\r\n            for (var _i = 0, _a = this.options.nodeModules; _i < _a.length; _i++) {\r\n                var nodeModule = _a[_i];\r\n                this.nodeModulesMap[nodeModule] = true;\r\n            }\r\n        };\r\n        Configuration.prototype._createSortedPathsRules = function () {\r\n            var _this = this;\r\n            // Create an array our of the paths rules, sorted descending by length to\r\n            // result in a more specific -> less specific order\r\n            this.sortedPathsRules = [];\r\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\r\n                if (!Array.isArray(to)) {\r\n                    _this.sortedPathsRules.push({\r\n                        from: from,\r\n                        to: [to]\r\n                    });\r\n                }\r\n                else {\r\n                    _this.sortedPathsRules.push({\r\n                        from: from,\r\n                        to: to\r\n                    });\r\n                }\r\n            });\r\n            this.sortedPathsRules.sort(function (a, b) {\r\n                return b.from.length - a.from.length;\r\n            });\r\n        };\r\n        /**\r\n         * Clone current configuration and overwrite options selectively.\r\n         * @param options The selective options to overwrite with.\r\n         * @result A new configuration\r\n         */\r\n        Configuration.prototype.cloneAndMerge = function (options) {\r\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\r\n        };\r\n        /**\r\n         * Get current options bag. Useful for passing it forward to plugins.\r\n         */\r\n        Configuration.prototype.getOptionsLiteral = function () {\r\n            return this.options;\r\n        };\r\n        Configuration.prototype._applyPaths = function (moduleId) {\r\n            var pathRule;\r\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\r\n                pathRule = this.sortedPathsRules[i];\r\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\r\n                    var result = [];\r\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\r\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\r\n                    }\r\n                    return result;\r\n                }\r\n            }\r\n            return [moduleId];\r\n        };\r\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\r\n            if (AMDLoader.Utilities.containsQueryString(url)) {\r\n                return url + '&' + this.options.urlArgs;\r\n            }\r\n            else {\r\n                return url + '?' + this.options.urlArgs;\r\n            }\r\n        };\r\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\r\n            if (this.options.urlArgs) {\r\n                return this._addUrlArgsToUrl(url);\r\n            }\r\n            return url;\r\n        };\r\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\r\n            if (this.options.urlArgs) {\r\n                for (var i = 0, len = urls.length; i < len; i++) {\r\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\r\n                }\r\n            }\r\n            return urls;\r\n        };\r\n        /**\r\n         * Transform a module id to a location. Appends .js to module ids\r\n         */\r\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\r\n            var isNodeModule = ((this.nodeModulesMap[moduleId] === true)\r\n                || (this.options.amdModulesPattern instanceof RegExp && !this.options.amdModulesPattern.test(moduleId)));\r\n            if (isNodeModule) {\r\n                // This is a node module...\r\n                if (this.isBuild()) {\r\n                    // ...and we are at build time, drop it\r\n                    return ['empty:'];\r\n                }\r\n                else {\r\n                    // ...and at runtime we create a `shortcut`-path\r\n                    return ['node|' + moduleId];\r\n                }\r\n            }\r\n            var result = moduleId;\r\n            var results;\r\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                results = this._applyPaths(result);\r\n                for (var i = 0, len = results.length; i < len; i++) {\r\n                    if (this.isBuild() && results[i] === 'empty:') {\r\n                        continue;\r\n                    }\r\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\r\n                        results[i] = this.options.baseUrl + results[i];\r\n                    }\r\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\r\n                        results[i] = results[i] + '.js';\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\r\n                    result = result + '.js';\r\n                }\r\n                results = [result];\r\n            }\r\n            return this._addUrlArgsIfNecessaryToUrls(results);\r\n        };\r\n        /**\r\n         * Transform a module id or url to a location.\r\n         */\r\n        Configuration.prototype.requireToUrl = function (url) {\r\n            var result = url;\r\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                result = this._applyPaths(result)[0];\r\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                    result = this.options.baseUrl + result;\r\n                }\r\n            }\r\n            return this._addUrlArgsIfNecessaryToUrl(result);\r\n        };\r\n        /**\r\n         * Flag to indicate if current execution is as part of a build.\r\n         */\r\n        Configuration.prototype.isBuild = function () {\r\n            return this.options.isBuild;\r\n        };\r\n        /**\r\n         * Test if module `moduleId` is expected to be defined multiple times\r\n         */\r\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\r\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\r\n        };\r\n        /**\r\n         * Get the configuration settings for the provided module id\r\n         */\r\n        Configuration.prototype.getConfigForModule = function (moduleId) {\r\n            if (this.options.config) {\r\n                return this.options.config[moduleId];\r\n            }\r\n        };\r\n        /**\r\n         * Should errors be caught when executing module factories?\r\n         */\r\n        Configuration.prototype.shouldCatchError = function () {\r\n            return this.options.catchError;\r\n        };\r\n        /**\r\n         * Should statistics be recorded?\r\n         */\r\n        Configuration.prototype.shouldRecordStats = function () {\r\n            return this.options.recordStats;\r\n        };\r\n        /**\r\n         * Forward an error to the error handler.\r\n         */\r\n        Configuration.prototype.onError = function (err) {\r\n            this.options.onError(err);\r\n        };\r\n        return Configuration;\r\n    }());\r\n    AMDLoader.Configuration = Configuration;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    /**\r\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\r\n     */\r\n    var OnlyOnceScriptLoader = /** @class */ (function () {\r\n        function OnlyOnceScriptLoader(env) {\r\n            this._env = env;\r\n            this._scriptLoader = null;\r\n            this._callbackMap = {};\r\n        }\r\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            var _this = this;\r\n            if (!this._scriptLoader) {\r\n                if (this._env.isWebWorker) {\r\n                    this._scriptLoader = new WorkerScriptLoader();\r\n                }\r\n                else if (this._env.isElectronRenderer) {\r\n                    var preferScriptTags = moduleManager.getConfig().getOptionsLiteral().preferScriptTags;\r\n                    if (preferScriptTags) {\r\n                        this._scriptLoader = new BrowserScriptLoader();\r\n                    }\r\n                    else {\r\n                        this._scriptLoader = new NodeScriptLoader(this._env);\r\n                    }\r\n                }\r\n                else if (this._env.isNode) {\r\n                    this._scriptLoader = new NodeScriptLoader(this._env);\r\n                }\r\n                else {\r\n                    this._scriptLoader = new BrowserScriptLoader();\r\n                }\r\n            }\r\n            var scriptCallbacks = {\r\n                callback: callback,\r\n                errorback: errorback\r\n            };\r\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\r\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\r\n                return;\r\n            }\r\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\r\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\r\n        };\r\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\r\n            var scriptCallbacks = this._callbackMap[scriptSrc];\r\n            delete this._callbackMap[scriptSrc];\r\n            for (var i = 0; i < scriptCallbacks.length; i++) {\r\n                scriptCallbacks[i].callback();\r\n            }\r\n        };\r\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\r\n            var scriptCallbacks = this._callbackMap[scriptSrc];\r\n            delete this._callbackMap[scriptSrc];\r\n            for (var i = 0; i < scriptCallbacks.length; i++) {\r\n                scriptCallbacks[i].errorback(err);\r\n            }\r\n        };\r\n        return OnlyOnceScriptLoader;\r\n    }());\r\n    var BrowserScriptLoader = /** @class */ (function () {\r\n        function BrowserScriptLoader() {\r\n        }\r\n        /**\r\n         * Attach load / error listeners to a script element and remove them when either one has fired.\r\n         * Implemented for browssers supporting HTML5 standard 'load' and 'error' events.\r\n         */\r\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\r\n            var unbind = function () {\r\n                script.removeEventListener('load', loadEventListener);\r\n                script.removeEventListener('error', errorEventListener);\r\n            };\r\n            var loadEventListener = function (e) {\r\n                unbind();\r\n                callback();\r\n            };\r\n            var errorEventListener = function (e) {\r\n                unbind();\r\n                errorback(e);\r\n            };\r\n            script.addEventListener('load', loadEventListener);\r\n            script.addEventListener('error', errorEventListener);\r\n        };\r\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            if (/^node\\|/.test(scriptSrc)) {\r\n                var opts = moduleManager.getConfig().getOptionsLiteral();\r\n                var nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\r\n                var pieces = scriptSrc.split('|');\r\n                var moduleExports_1 = null;\r\n                try {\r\n                    moduleExports_1 = nodeRequire(pieces[1]);\r\n                }\r\n                catch (err) {\r\n                    errorback(err);\r\n                    return;\r\n                }\r\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\r\n                callback();\r\n            }\r\n            else {\r\n                var script = document.createElement('script');\r\n                script.setAttribute('async', 'async');\r\n                script.setAttribute('type', 'text/javascript');\r\n                this.attachListeners(script, callback, errorback);\r\n                var trustedTypesPolicy = moduleManager.getConfig().getOptionsLiteral().trustedTypesPolicy;\r\n                if (trustedTypesPolicy) {\r\n                    scriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\r\n                }\r\n                script.setAttribute('src', scriptSrc);\r\n                // Propagate CSP nonce to dynamically created script tag.\r\n                var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\r\n                if (cspNonce) {\r\n                    script.setAttribute('nonce', cspNonce);\r\n                }\r\n                document.getElementsByTagName('head')[0].appendChild(script);\r\n            }\r\n        };\r\n        return BrowserScriptLoader;\r\n    }());\r\n    var WorkerScriptLoader = /** @class */ (function () {\r\n        function WorkerScriptLoader() {\r\n        }\r\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            var trustedTypesPolicy = moduleManager.getConfig().getOptionsLiteral().trustedTypesPolicy;\r\n            var isCrossOrigin = (/^((http:)|(https:)|(file:))/.test(scriptSrc) && scriptSrc.substring(0, self.origin.length) !== self.origin);\r\n            if (!isCrossOrigin) {\r\n                // use `fetch` if possible because `importScripts`\r\n                // is synchronous and can lead to deadlocks on Safari\r\n                fetch(scriptSrc).then(function (response) {\r\n                    if (response.status !== 200) {\r\n                        throw new Error(response.statusText);\r\n                    }\r\n                    return response.text();\r\n                }).then(function (text) {\r\n                    text = text + \"\\n//# sourceURL=\" + scriptSrc;\r\n                    var func = (trustedTypesPolicy\r\n                        ? self.eval(trustedTypesPolicy.createScript('', text))\r\n                        : new Function(text));\r\n                    func.call(self);\r\n                    callback();\r\n                }).then(undefined, errorback);\r\n                return;\r\n            }\r\n            try {\r\n                if (trustedTypesPolicy) {\r\n                    scriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\r\n                }\r\n                importScripts(scriptSrc);\r\n                callback();\r\n            }\r\n            catch (e) {\r\n                errorback(e);\r\n            }\r\n        };\r\n        return WorkerScriptLoader;\r\n    }());\r\n    var NodeScriptLoader = /** @class */ (function () {\r\n        function NodeScriptLoader(env) {\r\n            this._env = env;\r\n            this._didInitialize = false;\r\n            this._didPatchNodeRequire = false;\r\n        }\r\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\r\n            if (this._didInitialize) {\r\n                return;\r\n            }\r\n            this._didInitialize = true;\r\n            // capture node modules\r\n            this._fs = nodeRequire('fs');\r\n            this._vm = nodeRequire('vm');\r\n            this._path = nodeRequire('path');\r\n            this._crypto = nodeRequire('crypto');\r\n        };\r\n        // patch require-function of nodejs such that we can manually create a script\r\n        // from cached data. this is done by overriding the `Module._compile` function\r\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\r\n            // It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\r\n            // That's because `nodeCachedData` is set _after_ calling this for the first time...\r\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\r\n            if (!nodeCachedData) {\r\n                return;\r\n            }\r\n            if (this._didPatchNodeRequire) {\r\n                return;\r\n            }\r\n            this._didPatchNodeRequire = true;\r\n            var that = this;\r\n            var Module = nodeRequire('module');\r\n            function makeRequireFunction(mod) {\r\n                var Module = mod.constructor;\r\n                var require = function require(path) {\r\n                    try {\r\n                        return mod.require(path);\r\n                    }\r\n                    finally {\r\n                        // nothing\r\n                    }\r\n                };\r\n                require.resolve = function resolve(request, options) {\r\n                    return Module._resolveFilename(request, mod, false, options);\r\n                };\r\n                require.resolve.paths = function paths(request) {\r\n                    return Module._resolveLookupPaths(request, mod);\r\n                };\r\n                require.main = process.mainModule;\r\n                require.extensions = Module._extensions;\r\n                require.cache = Module._cache;\r\n                return require;\r\n            }\r\n            Module.prototype._compile = function (content, filename) {\r\n                // remove shebang and create wrapper function\r\n                var scriptSource = Module.wrap(content.replace(/^#!.*/, ''));\r\n                // create script\r\n                var recorder = moduleManager.getRecorder();\r\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\r\n                var options = { filename: filename };\r\n                var hashData;\r\n                try {\r\n                    var data = that._fs.readFileSync(cachedDataPath);\r\n                    hashData = data.slice(0, 16);\r\n                    options.cachedData = data.slice(16);\r\n                    recorder.record(60 /* CachedDataFound */, cachedDataPath);\r\n                }\r\n                catch (_e) {\r\n                    recorder.record(61 /* CachedDataMissed */, cachedDataPath);\r\n                }\r\n                var script = new that._vm.Script(scriptSource, options);\r\n                var compileWrapper = script.runInThisContext(options);\r\n                // run script\r\n                var dirname = that._path.dirname(filename);\r\n                var require = makeRequireFunction(this);\r\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\r\n                var result = compileWrapper.apply(this.exports, args);\r\n                // cached data aftermath\r\n                that._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\r\n                that._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\r\n                return result;\r\n            };\r\n        };\r\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            var _this = this;\r\n            var opts = moduleManager.getConfig().getOptionsLiteral();\r\n            var nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\r\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\r\n            this._init(nodeRequire);\r\n            this._initNodeRequire(nodeRequire, moduleManager);\r\n            var recorder = moduleManager.getRecorder();\r\n            if (/^node\\|/.test(scriptSrc)) {\r\n                var pieces = scriptSrc.split('|');\r\n                var moduleExports_2 = null;\r\n                try {\r\n                    moduleExports_2 = nodeRequire(pieces[1]);\r\n                }\r\n                catch (err) {\r\n                    errorback(err);\r\n                    return;\r\n                }\r\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_2; });\r\n                callback();\r\n            }\r\n            else {\r\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\r\n                var normalizedScriptSrc_1 = this._path.normalize(scriptSrc);\r\n                var vmScriptPathOrUri_1 = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc_1);\r\n                var wantsCachedData_1 = Boolean(opts.nodeCachedData);\r\n                var cachedDataPath_1 = wantsCachedData_1 ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : undefined;\r\n                this._readSourceAndCachedData(normalizedScriptSrc_1, cachedDataPath_1, recorder, function (err, data, cachedData, hashData) {\r\n                    if (err) {\r\n                        errorback(err);\r\n                        return;\r\n                    }\r\n                    var scriptSource;\r\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\r\n                        scriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\r\n                    }\r\n                    else {\r\n                        scriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\r\n                    }\r\n                    scriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc_1);\r\n                    var scriptOpts = { filename: vmScriptPathOrUri_1, cachedData: cachedData };\r\n                    var script = _this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\r\n                    _this._handleCachedData(script, scriptSource, cachedDataPath_1, wantsCachedData_1 && !cachedData, moduleManager);\r\n                    _this._verifyCachedData(script, scriptSource, cachedDataPath_1, hashData, moduleManager);\r\n                });\r\n            }\r\n        };\r\n        NodeScriptLoader.prototype._createAndEvalScript = function (moduleManager, contents, options, callback, errorback) {\r\n            var recorder = moduleManager.getRecorder();\r\n            recorder.record(31 /* NodeBeginEvaluatingScript */, options.filename);\r\n            var script = new this._vm.Script(contents, options);\r\n            var ret = script.runInThisContext(options);\r\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\r\n            var receivedDefineCall = false;\r\n            var localDefineFunc = function () {\r\n                receivedDefineCall = true;\r\n                return globalDefineFunc.apply(null, arguments);\r\n            };\r\n            localDefineFunc.amd = globalDefineFunc.amd;\r\n            ret.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\r\n            recorder.record(32 /* NodeEndEvaluatingScript */, options.filename);\r\n            if (receivedDefineCall) {\r\n                callback();\r\n            }\r\n            else {\r\n                errorback(new Error(\"Didn't receive define call in \" + options.filename + \"!\"));\r\n            }\r\n            return script;\r\n        };\r\n        NodeScriptLoader.prototype._getElectronRendererScriptPathOrUri = function (path) {\r\n            if (!this._env.isElectronRenderer) {\r\n                return path;\r\n            }\r\n            var driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\r\n            if (driveLetterMatch) {\r\n                // windows\r\n                return \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\r\n            }\r\n            else {\r\n                // nix\r\n                return \"file://\" + path;\r\n            }\r\n        };\r\n        NodeScriptLoader.prototype._getCachedDataPath = function (config, filename) {\r\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(config.seed, 'utf8').update(process.arch, '').digest('hex');\r\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\r\n            return this._path.join(config.path, basename + \"-\" + hash + \".code\");\r\n        };\r\n        NodeScriptLoader.prototype._handleCachedData = function (script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\r\n            var _this = this;\r\n            if (script.cachedDataRejected) {\r\n                // cached data got rejected -> delete and re-create\r\n                this._fs.unlink(cachedDataPath, function (err) {\r\n                    moduleManager.getRecorder().record(62 /* CachedDataRejected */, cachedDataPath);\r\n                    _this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\r\n                    if (err) {\r\n                        moduleManager.getConfig().onError(err);\r\n                    }\r\n                });\r\n            }\r\n            else if (createCachedData) {\r\n                // no cached data, but wanted\r\n                this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\r\n            }\r\n        };\r\n        // Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\r\n        // -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\r\n        // -V8_CACHED_DATA is what v8 produces\r\n        NodeScriptLoader.prototype._createAndWriteCachedData = function (script, scriptSource, cachedDataPath, moduleManager) {\r\n            var _this = this;\r\n            var timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\r\n            var lastSize = -1;\r\n            var iteration = 0;\r\n            var hashData = undefined;\r\n            var createLoop = function () {\r\n                setTimeout(function () {\r\n                    if (!hashData) {\r\n                        hashData = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\r\n                    }\r\n                    var cachedData = script.createCachedData();\r\n                    if (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\r\n                        // done\r\n                        return;\r\n                    }\r\n                    if (cachedData.length < lastSize) {\r\n                        // less data than before: skip, try again next round\r\n                        createLoop();\r\n                        return;\r\n                    }\r\n                    lastSize = cachedData.length;\r\n                    _this._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), function (err) {\r\n                        if (err) {\r\n                            moduleManager.getConfig().onError(err);\r\n                        }\r\n                        moduleManager.getRecorder().record(63 /* CachedDataCreated */, cachedDataPath);\r\n                        createLoop();\r\n                    });\r\n                }, timeout * (Math.pow(4, iteration++)));\r\n            };\r\n            // with some delay (`timeout`) create cached data\r\n            // and repeat that (with backoff delay) until the\r\n            // data seems to be not changing anymore\r\n            createLoop();\r\n        };\r\n        NodeScriptLoader.prototype._readSourceAndCachedData = function (sourcePath, cachedDataPath, recorder, callback) {\r\n            if (!cachedDataPath) {\r\n                // no cached data case\r\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, callback);\r\n            }\r\n            else {\r\n                // cached data case: read both files in parallel\r\n                var source_1 = undefined;\r\n                var cachedData_1 = undefined;\r\n                var hashData_1 = undefined;\r\n                var steps_1 = 2;\r\n                var step_1 = function (err) {\r\n                    if (err) {\r\n                        callback(err);\r\n                    }\r\n                    else if (--steps_1 === 0) {\r\n                        callback(undefined, source_1, cachedData_1, hashData_1);\r\n                    }\r\n                };\r\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, function (err, data) {\r\n                    source_1 = data;\r\n                    step_1(err);\r\n                });\r\n                this._fs.readFile(cachedDataPath, function (err, data) {\r\n                    if (!err && data && data.length > 0) {\r\n                        hashData_1 = data.slice(0, 16);\r\n                        cachedData_1 = data.slice(16);\r\n                        recorder.record(60 /* CachedDataFound */, cachedDataPath);\r\n                    }\r\n                    else {\r\n                        recorder.record(61 /* CachedDataMissed */, cachedDataPath);\r\n                    }\r\n                    step_1(); // ignored: cached data is optional\r\n                });\r\n            }\r\n        };\r\n        NodeScriptLoader.prototype._verifyCachedData = function (script, scriptSource, cachedDataPath, hashData, moduleManager) {\r\n            var _this = this;\r\n            if (!hashData) {\r\n                // nothing to do\r\n                return;\r\n            }\r\n            if (script.cachedDataRejected) {\r\n                // invalid anyways\r\n                return;\r\n            }\r\n            setTimeout(function () {\r\n                // check source hash - the contract is that file paths change when file content\r\n                // change (e.g use the commit or version id as cache path). this check is\r\n                // for violations of this contract.\r\n                var hashDataNow = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\r\n                if (!hashData.equals(hashDataNow)) {\r\n                    moduleManager.getConfig().onError(new Error(\"FAILED TO VERIFY CACHED DATA, deleting stale '\" + cachedDataPath + \"' now, but a RESTART IS REQUIRED\"));\r\n                    _this._fs.unlink(cachedDataPath, function (err) {\r\n                        if (err) {\r\n                            moduleManager.getConfig().onError(err);\r\n                        }\r\n                    });\r\n                }\r\n            }, Math.ceil(5000 * (1 + Math.random())));\r\n        };\r\n        NodeScriptLoader._BOM = 0xFEFF;\r\n        NodeScriptLoader._PREFIX = '(function (require, define, __filename, __dirname) { ';\r\n        NodeScriptLoader._SUFFIX = '\\n});';\r\n        return NodeScriptLoader;\r\n    }());\r\n    function ensureRecordedNodeRequire(recorder, _nodeRequire) {\r\n        if (_nodeRequire.__$__isRecorded) {\r\n            // it is already recorded\r\n            return _nodeRequire;\r\n        }\r\n        var nodeRequire = function nodeRequire(what) {\r\n            recorder.record(33 /* NodeBeginNativeRequire */, what);\r\n            try {\r\n                return _nodeRequire(what);\r\n            }\r\n            finally {\r\n                recorder.record(34 /* NodeEndNativeRequire */, what);\r\n            }\r\n        };\r\n        nodeRequire.__$__isRecorded = true;\r\n        return nodeRequire;\r\n    }\r\n    AMDLoader.ensureRecordedNodeRequire = ensureRecordedNodeRequire;\r\n    function createScriptLoader(env) {\r\n        return new OnlyOnceScriptLoader(env);\r\n    }\r\n    AMDLoader.createScriptLoader = createScriptLoader;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    // ------------------------------------------------------------------------\r\n    // ModuleIdResolver\r\n    var ModuleIdResolver = /** @class */ (function () {\r\n        function ModuleIdResolver(fromModuleId) {\r\n            var lastSlash = fromModuleId.lastIndexOf('/');\r\n            if (lastSlash !== -1) {\r\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\r\n            }\r\n            else {\r\n                this.fromModulePath = '';\r\n            }\r\n        }\r\n        /**\r\n         * Normalize 'a/../name' to 'name', etc.\r\n         */\r\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\r\n            var r = moduleId, pattern;\r\n            // replace /./ => /\r\n            pattern = /\\/\\.\\//;\r\n            while (pattern.test(r)) {\r\n                r = r.replace(pattern, '/');\r\n            }\r\n            // replace ^./ => nothing\r\n            r = r.replace(/^\\.\\//g, '');\r\n            // replace /aa/../ => / (BUT IGNORE /../../)\r\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\r\n            while (pattern.test(r)) {\r\n                r = r.replace(pattern, '/');\r\n            }\r\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\r\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\r\n            return r;\r\n        };\r\n        /**\r\n         * Resolve relative module ids\r\n         */\r\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\r\n            var result = moduleId;\r\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\r\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        ModuleIdResolver.ROOT = new ModuleIdResolver('');\r\n        return ModuleIdResolver;\r\n    }());\r\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\r\n    // ------------------------------------------------------------------------\r\n    // Module\r\n    var Module = /** @class */ (function () {\r\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\r\n            this.id = id;\r\n            this.strId = strId;\r\n            this.dependencies = dependencies;\r\n            this._callback = callback;\r\n            this._errorback = errorback;\r\n            this.moduleIdResolver = moduleIdResolver;\r\n            this.exports = {};\r\n            this.error = null;\r\n            this.exportsPassedIn = false;\r\n            this.unresolvedDependenciesCount = this.dependencies.length;\r\n            this._isComplete = false;\r\n        }\r\n        Module._safeInvokeFunction = function (callback, args) {\r\n            try {\r\n                return {\r\n                    returnedValue: callback.apply(AMDLoader.global, args),\r\n                    producedError: null\r\n                };\r\n            }\r\n            catch (e) {\r\n                return {\r\n                    returnedValue: null,\r\n                    producedError: e\r\n                };\r\n            }\r\n        };\r\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\r\n            if (config.isBuild() && !AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\r\n                return {\r\n                    returnedValue: null,\r\n                    producedError: null\r\n                };\r\n            }\r\n            if (config.shouldCatchError()) {\r\n                return this._safeInvokeFunction(callback, dependenciesValues);\r\n            }\r\n            return {\r\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\r\n                producedError: null\r\n            };\r\n        };\r\n        Module.prototype.complete = function (recorder, config, dependenciesValues) {\r\n            this._isComplete = true;\r\n            var producedError = null;\r\n            if (this._callback) {\r\n                if (typeof this._callback === 'function') {\r\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\r\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\r\n                    producedError = r.producedError;\r\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\r\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\r\n                        this.exports = r.returnedValue;\r\n                    }\r\n                }\r\n                else {\r\n                    this.exports = this._callback;\r\n                }\r\n            }\r\n            if (producedError) {\r\n                var err = AMDLoader.ensureError(producedError);\r\n                err.phase = 'factory';\r\n                err.moduleId = this.strId;\r\n                this.error = err;\r\n                config.onError(err);\r\n            }\r\n            this.dependencies = null;\r\n            this._callback = null;\r\n            this._errorback = null;\r\n            this.moduleIdResolver = null;\r\n        };\r\n        /**\r\n         * One of the direct dependencies or a transitive dependency has failed to load.\r\n         */\r\n        Module.prototype.onDependencyError = function (err) {\r\n            this._isComplete = true;\r\n            this.error = err;\r\n            if (this._errorback) {\r\n                this._errorback(err);\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Is the current module complete?\r\n         */\r\n        Module.prototype.isComplete = function () {\r\n            return this._isComplete;\r\n        };\r\n        return Module;\r\n    }());\r\n    AMDLoader.Module = Module;\r\n    var ModuleIdProvider = /** @class */ (function () {\r\n        function ModuleIdProvider() {\r\n            this._nextId = 0;\r\n            this._strModuleIdToIntModuleId = new Map();\r\n            this._intModuleIdToStrModuleId = [];\r\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\r\n            this.getModuleId('exports');\r\n            this.getModuleId('module');\r\n            this.getModuleId('require');\r\n        }\r\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\r\n            return this._nextId;\r\n        };\r\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\r\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\r\n            if (typeof id === 'undefined') {\r\n                id = this._nextId++;\r\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\r\n                this._intModuleIdToStrModuleId[id] = strModuleId;\r\n            }\r\n            return id;\r\n        };\r\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\r\n            return this._intModuleIdToStrModuleId[moduleId];\r\n        };\r\n        return ModuleIdProvider;\r\n    }());\r\n    var RegularDependency = /** @class */ (function () {\r\n        function RegularDependency(id) {\r\n            this.id = id;\r\n        }\r\n        RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\r\n        RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\r\n        RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\r\n        return RegularDependency;\r\n    }());\r\n    AMDLoader.RegularDependency = RegularDependency;\r\n    var PluginDependency = /** @class */ (function () {\r\n        function PluginDependency(id, pluginId, pluginParam) {\r\n            this.id = id;\r\n            this.pluginId = pluginId;\r\n            this.pluginParam = pluginParam;\r\n        }\r\n        return PluginDependency;\r\n    }());\r\n    AMDLoader.PluginDependency = PluginDependency;\r\n    var ModuleManager = /** @class */ (function () {\r\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\r\n            if (loaderAvailableTimestamp === void 0) { loaderAvailableTimestamp = 0; }\r\n            this._env = env;\r\n            this._scriptLoader = scriptLoader;\r\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\r\n            this._defineFunc = defineFunc;\r\n            this._requireFunc = requireFunc;\r\n            this._moduleIdProvider = new ModuleIdProvider();\r\n            this._config = new AMDLoader.Configuration(this._env);\r\n            this._hasDependencyCycle = false;\r\n            this._modules2 = [];\r\n            this._knownModules2 = [];\r\n            this._inverseDependencies2 = [];\r\n            this._inversePluginDependencies2 = new Map();\r\n            this._currentAnnonymousDefineCall = null;\r\n            this._recorder = null;\r\n            this._buildInfoPath = [];\r\n            this._buildInfoDefineStack = [];\r\n            this._buildInfoDependencies = [];\r\n        }\r\n        ModuleManager.prototype.reset = function () {\r\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\r\n        };\r\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\r\n            return this._defineFunc;\r\n        };\r\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\r\n            return this._requireFunc;\r\n        };\r\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\r\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\r\n            var normalizedPath = normalize(needle);\r\n            var stackPieces = stack.split(/\\n/);\r\n            for (var i = 0; i < stackPieces.length; i++) {\r\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\r\n                if (m) {\r\n                    var stackPath = m[1];\r\n                    var stackLine = m[2];\r\n                    var stackColumn = m[3];\r\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\r\n                    stackPath = stackPath.substr(trimPathOffset);\r\n                    stackPath = normalize(stackPath);\r\n                    if (stackPath === normalizedPath) {\r\n                        var r = {\r\n                            line: parseInt(stackLine, 10),\r\n                            col: parseInt(stackColumn, 10)\r\n                        };\r\n                        if (r.line === 1) {\r\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\r\n                        }\r\n                        return r;\r\n                    }\r\n                }\r\n            }\r\n            throw new Error('Could not correlate define call site for needle ' + needle);\r\n        };\r\n        ModuleManager.prototype.getBuildInfo = function () {\r\n            if (!this._config.isBuild()) {\r\n                return null;\r\n            }\r\n            var result = [], resultLen = 0;\r\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\r\n                var m = this._modules2[i];\r\n                if (!m) {\r\n                    continue;\r\n                }\r\n                var location_1 = this._buildInfoPath[m.id] || null;\r\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\r\n                var dependencies = this._buildInfoDependencies[m.id];\r\n                result[resultLen++] = {\r\n                    id: m.strId,\r\n                    path: location_1,\r\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\r\n                    dependencies: dependencies,\r\n                    shim: null,\r\n                    exports: m.exports\r\n                };\r\n            }\r\n            return result;\r\n        };\r\n        ModuleManager.prototype.getRecorder = function () {\r\n            if (!this._recorder) {\r\n                if (this._config.shouldRecordStats()) {\r\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\r\n                }\r\n                else {\r\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\r\n                }\r\n            }\r\n            return this._recorder;\r\n        };\r\n        ModuleManager.prototype.getLoaderEvents = function () {\r\n            return this.getRecorder().getEvents();\r\n        };\r\n        /**\r\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\r\n         * @param dependecies @see defineModule\r\n         * @param callback @see defineModule\r\n         */\r\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\r\n            if (this._currentAnnonymousDefineCall !== null) {\r\n                throw new Error('Can only have one anonymous define call per script file');\r\n            }\r\n            var stack = null;\r\n            if (this._config.isBuild()) {\r\n                stack = new Error('StackLocation').stack || null;\r\n            }\r\n            this._currentAnnonymousDefineCall = {\r\n                stack: stack,\r\n                dependencies: dependencies,\r\n                callback: callback\r\n            };\r\n        };\r\n        /**\r\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\r\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\r\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\r\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\r\n         */\r\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\r\n            var _this = this;\r\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(strModuleId); }\r\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\r\n            if (this._modules2[moduleId]) {\r\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\r\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\r\n                }\r\n                // Super important! Completely ignore duplicate module definition\r\n                return;\r\n            }\r\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\r\n            this._modules2[moduleId] = m;\r\n            if (this._config.isBuild()) {\r\n                this._buildInfoDefineStack[moduleId] = stack;\r\n                this._buildInfoDependencies[moduleId] = (m.dependencies || []).map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\r\n            }\r\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\r\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\r\n            this._resolve(m);\r\n        };\r\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\r\n            if (dependency === 'exports') {\r\n                return RegularDependency.EXPORTS;\r\n            }\r\n            if (dependency === 'module') {\r\n                return RegularDependency.MODULE;\r\n            }\r\n            if (dependency === 'require') {\r\n                return RegularDependency.REQUIRE;\r\n            }\r\n            // Normalize dependency and then request it from the manager\r\n            var bangIndex = dependency.indexOf('!');\r\n            if (bangIndex >= 0) {\r\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\r\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\r\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\r\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\r\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\r\n            }\r\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\r\n        };\r\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\r\n            var result = [], resultLen = 0;\r\n            for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\r\n            }\r\n            return result;\r\n        };\r\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\r\n            if (typeof dependencies === 'string') {\r\n                return this.synchronousRequire(dependencies, moduleIdResolver);\r\n            }\r\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\r\n        };\r\n        /**\r\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\r\n         * @param id The unique and absolute id of the required module\r\n         * @return The exports of module 'id'\r\n         */\r\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\r\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(_strModuleId); }\r\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\r\n            var m = this._modules2[dependency.id];\r\n            if (!m) {\r\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\r\n            }\r\n            if (!m.isComplete()) {\r\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\r\n            }\r\n            if (m.error) {\r\n                throw m.error;\r\n            }\r\n            return m.exports;\r\n        };\r\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\r\n            var oldShouldRecordStats = this._config.shouldRecordStats();\r\n            if (shouldOverwrite) {\r\n                this._config = new AMDLoader.Configuration(this._env, params);\r\n            }\r\n            else {\r\n                this._config = this._config.cloneAndMerge(params);\r\n            }\r\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\r\n                this._recorder = null;\r\n            }\r\n        };\r\n        ModuleManager.prototype.getConfig = function () {\r\n            return this._config;\r\n        };\r\n        /**\r\n         * Callback from the scriptLoader when a module has been loaded.\r\n         * This means its code is available and has been executed.\r\n         */\r\n        ModuleManager.prototype._onLoad = function (moduleId) {\r\n            if (this._currentAnnonymousDefineCall !== null) {\r\n                var defineCall = this._currentAnnonymousDefineCall;\r\n                this._currentAnnonymousDefineCall = null;\r\n                // Hit an anonymous define call\r\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\r\n            }\r\n        };\r\n        ModuleManager.prototype._createLoadError = function (moduleId, _err) {\r\n            var _this = this;\r\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\r\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\r\n            var err = AMDLoader.ensureError(_err);\r\n            err.phase = 'loading';\r\n            err.moduleId = strModuleId;\r\n            err.neededBy = neededBy;\r\n            return err;\r\n        };\r\n        /**\r\n         * Callback from the scriptLoader when a module hasn't been loaded.\r\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\r\n         */\r\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\r\n            var error = this._createLoadError(moduleId, err);\r\n            if (!this._modules2[moduleId]) {\r\n                this._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], function () { }, function () { }, null);\r\n            }\r\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\r\n            var seenModuleId = [];\r\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\r\n                seenModuleId[i] = false;\r\n            }\r\n            var someoneNotified = false;\r\n            var queue = [];\r\n            queue.push(moduleId);\r\n            seenModuleId[moduleId] = true;\r\n            while (queue.length > 0) {\r\n                var queueElement = queue.shift();\r\n                var m = this._modules2[queueElement];\r\n                if (m) {\r\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\r\n                }\r\n                var inverseDeps = this._inverseDependencies2[queueElement];\r\n                if (inverseDeps) {\r\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\r\n                        var inverseDep = inverseDeps[i];\r\n                        if (!seenModuleId[inverseDep]) {\r\n                            queue.push(inverseDep);\r\n                            seenModuleId[inverseDep] = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!someoneNotified) {\r\n                this._config.onError(error);\r\n            }\r\n        };\r\n        /**\r\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\r\n         * Returns true if there is such a path or false otherwise.\r\n         * @param from Module id to start at\r\n         * @param to Module id to look for\r\n         */\r\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\r\n            var from = this._modules2[fromId];\r\n            if (!from) {\r\n                return false;\r\n            }\r\n            var inQueue = [];\r\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\r\n                inQueue[i] = false;\r\n            }\r\n            var queue = [];\r\n            // Insert 'from' in queue\r\n            queue.push(from);\r\n            inQueue[fromId] = true;\r\n            while (queue.length > 0) {\r\n                // Pop first inserted element of queue\r\n                var element = queue.shift();\r\n                var dependencies = element.dependencies;\r\n                if (dependencies) {\r\n                    // Walk the element's dependencies\r\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                        var dependency = dependencies[i];\r\n                        if (dependency.id === toId) {\r\n                            // There is a path to 'to'\r\n                            return true;\r\n                        }\r\n                        var dependencyModule = this._modules2[dependency.id];\r\n                        if (dependencyModule && !inQueue[dependency.id]) {\r\n                            // Insert 'dependency' in queue\r\n                            inQueue[dependency.id] = true;\r\n                            queue.push(dependencyModule);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // There is no path to 'to'\r\n            return false;\r\n        };\r\n        /**\r\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\r\n         * Returns cycle as array.\r\n         * @param from Module id to start at\r\n         * @param to Module id to look for\r\n         */\r\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\r\n            if (fromId === toId || depth === 50) {\r\n                return [fromId];\r\n            }\r\n            var from = this._modules2[fromId];\r\n            if (!from) {\r\n                return null;\r\n            }\r\n            // Walk the element's dependencies\r\n            var dependencies = from.dependencies;\r\n            if (dependencies) {\r\n                for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                    var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\r\n                    if (path !== null) {\r\n                        path.push(fromId);\r\n                        return path;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Create the local 'require' that is passed into modules\r\n         */\r\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\r\n            var _this = this;\r\n            var result = (function (dependencies, callback, errorback) {\r\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\r\n            });\r\n            result.toUrl = function (id) {\r\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\r\n            };\r\n            result.getStats = function () {\r\n                return _this.getLoaderEvents();\r\n            };\r\n            result.hasDependencyCycle = function () {\r\n                return _this._hasDependencyCycle;\r\n            };\r\n            result.config = function (params, shouldOverwrite) {\r\n                if (shouldOverwrite === void 0) { shouldOverwrite = false; }\r\n                _this.configure(params, shouldOverwrite);\r\n            };\r\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\r\n            return result;\r\n        };\r\n        ModuleManager.prototype._loadModule = function (moduleId) {\r\n            var _this = this;\r\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\r\n                // known module\r\n                return;\r\n            }\r\n            this._knownModules2[moduleId] = true;\r\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\r\n            var paths = this._config.moduleIdToPaths(strModuleId);\r\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\r\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\r\n                paths.push('node|' + strModuleId);\r\n            }\r\n            var lastPathIndex = -1;\r\n            var loadNextPath = function (err) {\r\n                lastPathIndex++;\r\n                if (lastPathIndex >= paths.length) {\r\n                    // No more paths to try\r\n                    _this._onLoadError(moduleId, err);\r\n                }\r\n                else {\r\n                    var currentPath_1 = paths[lastPathIndex];\r\n                    var recorder_1 = _this.getRecorder();\r\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\r\n                        _this._buildInfoPath[moduleId] = currentPath_1;\r\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\r\n                        _this._onLoad(moduleId);\r\n                        return;\r\n                    }\r\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\r\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\r\n                        if (_this._config.isBuild()) {\r\n                            _this._buildInfoPath[moduleId] = currentPath_1;\r\n                        }\r\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\r\n                        _this._onLoad(moduleId);\r\n                    }, function (err) {\r\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\r\n                        loadNextPath(err);\r\n                    });\r\n                }\r\n            };\r\n            loadNextPath(null);\r\n        };\r\n        /**\r\n         * Resolve a plugin dependency with the plugin loaded & complete\r\n         * @param module The module that has this dependency\r\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\r\n         * @param plugin The plugin (what the plugin exports)\r\n         */\r\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\r\n            var _this = this;\r\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\r\n                // known module\r\n                return;\r\n            }\r\n            this._knownModules2[pluginDependency.id] = true;\r\n            // Delegate the loading of the resource to the plugin\r\n            var load = (function (value) {\r\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\r\n            });\r\n            load.error = function (err) {\r\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\r\n            };\r\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\r\n        };\r\n        /**\r\n         * Examine the dependencies of module 'module' and resolve them as needed.\r\n         */\r\n        ModuleManager.prototype._resolve = function (module) {\r\n            var _this = this;\r\n            var dependencies = module.dependencies;\r\n            if (dependencies) {\r\n                for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                    var dependency = dependencies[i];\r\n                    if (dependency === RegularDependency.EXPORTS) {\r\n                        module.exportsPassedIn = true;\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.MODULE) {\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.REQUIRE) {\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    var dependencyModule = this._modules2[dependency.id];\r\n                    if (dependencyModule && dependencyModule.isComplete()) {\r\n                        if (dependencyModule.error) {\r\n                            module.onDependencyError(dependencyModule.error);\r\n                            return;\r\n                        }\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    if (this._hasDependencyPath(dependency.id, module.id)) {\r\n                        this._hasDependencyCycle = true;\r\n                        console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\r\n                        var cyclePath = this._findCyclePath(dependency.id, module.id, 0) || [];\r\n                        cyclePath.reverse();\r\n                        cyclePath.push(dependency.id);\r\n                        console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\r\n                        // Break the cycle\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    // record inverse dependency\r\n                    this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\r\n                    this._inverseDependencies2[dependency.id].push(module.id);\r\n                    if (dependency instanceof PluginDependency) {\r\n                        var plugin = this._modules2[dependency.pluginId];\r\n                        if (plugin && plugin.isComplete()) {\r\n                            this._loadPluginDependency(plugin.exports, dependency);\r\n                            continue;\r\n                        }\r\n                        // Record dependency for when the plugin gets loaded\r\n                        var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\r\n                        if (!inversePluginDeps) {\r\n                            inversePluginDeps = [];\r\n                            this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\r\n                        }\r\n                        inversePluginDeps.push(dependency);\r\n                        this._loadModule(dependency.pluginId);\r\n                        continue;\r\n                    }\r\n                    this._loadModule(dependency.id);\r\n                }\r\n            }\r\n            if (module.unresolvedDependenciesCount === 0) {\r\n                this._onModuleComplete(module);\r\n            }\r\n        };\r\n        ModuleManager.prototype._onModuleComplete = function (module) {\r\n            var _this = this;\r\n            var recorder = this.getRecorder();\r\n            if (module.isComplete()) {\r\n                // already done\r\n                return;\r\n            }\r\n            var dependencies = module.dependencies;\r\n            var dependenciesValues = [];\r\n            if (dependencies) {\r\n                for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                    var dependency = dependencies[i];\r\n                    if (dependency === RegularDependency.EXPORTS) {\r\n                        dependenciesValues[i] = module.exports;\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.MODULE) {\r\n                        dependenciesValues[i] = {\r\n                            id: module.strId,\r\n                            config: function () {\r\n                                return _this._config.getConfigForModule(module.strId);\r\n                            }\r\n                        };\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.REQUIRE) {\r\n                        dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\r\n                        continue;\r\n                    }\r\n                    var dependencyModule = this._modules2[dependency.id];\r\n                    if (dependencyModule) {\r\n                        dependenciesValues[i] = dependencyModule.exports;\r\n                        continue;\r\n                    }\r\n                    dependenciesValues[i] = null;\r\n                }\r\n            }\r\n            module.complete(recorder, this._config, dependenciesValues);\r\n            // Fetch and clear inverse dependencies\r\n            var inverseDeps = this._inverseDependencies2[module.id];\r\n            this._inverseDependencies2[module.id] = null;\r\n            if (inverseDeps) {\r\n                // Resolve one inverse dependency at a time, always\r\n                // on the lookout for a completed module.\r\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\r\n                    var inverseDependencyId = inverseDeps[i];\r\n                    var inverseDependency = this._modules2[inverseDependencyId];\r\n                    inverseDependency.unresolvedDependenciesCount--;\r\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\r\n                        this._onModuleComplete(inverseDependency);\r\n                    }\r\n                }\r\n            }\r\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\r\n            if (inversePluginDeps) {\r\n                // This module is used as a plugin at least once\r\n                // Fetch and clear these inverse plugin dependencies\r\n                this._inversePluginDependencies2.delete(module.id);\r\n                // Resolve plugin dependencies one at a time\r\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\r\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\r\n                }\r\n            }\r\n        };\r\n        return ModuleManager;\r\n    }());\r\n    AMDLoader.ModuleManager = ModuleManager;\r\n})(AMDLoader || (AMDLoader = {}));\r\nvar define;\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    var env = new AMDLoader.Environment();\r\n    var moduleManager = null;\r\n    var DefineFunc = function (id, dependencies, callback) {\r\n        if (typeof id !== 'string') {\r\n            callback = dependencies;\r\n            dependencies = id;\r\n            id = null;\r\n        }\r\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\r\n            callback = dependencies;\r\n            dependencies = null;\r\n        }\r\n        if (!dependencies) {\r\n            dependencies = ['require', 'exports', 'module'];\r\n        }\r\n        if (id) {\r\n            moduleManager.defineModule(id, dependencies, callback, null, null);\r\n        }\r\n        else {\r\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\r\n        }\r\n    };\r\n    DefineFunc.amd = {\r\n        jQuery: true\r\n    };\r\n    var _requireFunc_config = function (params, shouldOverwrite) {\r\n        if (shouldOverwrite === void 0) { shouldOverwrite = false; }\r\n        moduleManager.configure(params, shouldOverwrite);\r\n    };\r\n    var RequireFunc = function () {\r\n        if (arguments.length === 1) {\r\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\r\n                _requireFunc_config(arguments[0]);\r\n                return;\r\n            }\r\n            if (typeof arguments[0] === 'string') {\r\n                return moduleManager.synchronousRequire(arguments[0]);\r\n            }\r\n        }\r\n        if (arguments.length === 2 || arguments.length === 3) {\r\n            if (Array.isArray(arguments[0])) {\r\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\r\n                return;\r\n            }\r\n        }\r\n        throw new Error('Unrecognized require call');\r\n    };\r\n    RequireFunc.config = _requireFunc_config;\r\n    RequireFunc.getConfig = function () {\r\n        return moduleManager.getConfig().getOptionsLiteral();\r\n    };\r\n    RequireFunc.reset = function () {\r\n        moduleManager = moduleManager.reset();\r\n    };\r\n    RequireFunc.getBuildInfo = function () {\r\n        return moduleManager.getBuildInfo();\r\n    };\r\n    RequireFunc.getStats = function () {\r\n        return moduleManager.getLoaderEvents();\r\n    };\r\n    RequireFunc.define = function () {\r\n        return DefineFunc.apply(null, arguments);\r\n    };\r\n    function init() {\r\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\r\n            var _nodeRequire = (AMDLoader.global.require || require);\r\n            if (typeof _nodeRequire === 'function' && typeof _nodeRequire.resolve === 'function') {\r\n                // re-expose node's require function\r\n                var nodeRequire = AMDLoader.ensureRecordedNodeRequire(moduleManager.getRecorder(), _nodeRequire);\r\n                AMDLoader.global.nodeRequire = nodeRequire;\r\n                RequireFunc.nodeRequire = nodeRequire;\r\n                RequireFunc.__$__nodeRequire = nodeRequire;\r\n            }\r\n        }\r\n        if (env.isNode && !env.isElectronRenderer) {\r\n            module.exports = RequireFunc;\r\n            require = RequireFunc;\r\n        }\r\n        else {\r\n            if (!env.isElectronRenderer) {\r\n                AMDLoader.global.define = DefineFunc;\r\n            }\r\n            AMDLoader.global.require = RequireFunc;\r\n        }\r\n    }\r\n    AMDLoader.init = init;\r\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\r\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\r\n        // The global variable require can configure the loader\r\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\r\n            RequireFunc.config(AMDLoader.global.require);\r\n        }\r\n        // This define is for the local closure defined in node in the case that the loader is concatenated\r\n        define = function () {\r\n            return DefineFunc.apply(null, arguments);\r\n        };\r\n        define.amd = DefineFunc.amd;\r\n        if (typeof doNotInitLoader === 'undefined') {\r\n            init();\r\n        }\r\n    }\r\n})(AMDLoader || (AMDLoader = {}));\r\n"],"mappings":"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","names":[],"file":"loader.js"}